{"version":3,"file":"static/js/236.325f2795.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { selectErrorStatus } from 'redux/auth/selectors';\nimport { register } from 'redux/auth/operations';\nimport { Link } from 'react-router-dom';\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error =\n    useSelector(selectErrorStatus) === 'Request failed with status code 400';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    dispatch(\n      register({\n        name: data.get('name'),\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    );\n  };\n\n  const theme = createTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Create your account\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  inputMode=\"text\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  error={error}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  inputMode=\"email\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  error={error}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  error={error}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{\n                mt: 3,\n                mb: 2,\n                background:\n                  'linear-gradient(-90deg, rgba(51,44,148,1) 0%, rgba(157,153,251,1) 100%)',\n              }}\n            >\n              Register\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                Already have an account?{' '}\n                <Link to=\"/login\" style={{ textDecoration: 'underline' }}>\n                  Log in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : EMPTY_THEME,\n    children: props.children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;"],"names":["RegisterForm","dispatch","useDispatch","error","useSelector","selectErrorStatus","theme","createTheme","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","e","preventDefault","data","FormData","currentTarget","register","name","get","email","password","mt","Grid","container","spacing","item","xs","TextField","inputMode","required","fullWidth","id","label","type","Button","mb","background","justifyContent","to","style","textDecoration","Register","Helmet","html","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","default","common","white","inProps","props","useThemeProps","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","_theme$components$Mui","colorSchemeStyles","colorSchemes","Object","entries","forEach","_scheme$palette","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","Symbol","for","localTheme","outerTheme","useTheme","output","mergeOuterLocalTheme","nested","ThemeContext","value","EMPTY_THEME","InnerThemeProvider","StyledEngineThemeContext","MuiThemeProvider"],"sourceRoot":""}